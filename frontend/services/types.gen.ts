// This file is auto-generated by @hey-api/openapi-ts

export type CreateTaskSchema = {
    title: string;
    status?: (TaskStatus);
    description: string;
    expected_date?: (string | null);
    tags?: Array<(string)>;
    order?: number;
};

export type CreateTaskSchemaPatch = {
    title?: (string | null);
    status?: (TaskStatus | null);
    description?: (string | null);
    expected_date?: (string | null);
    tags?: (Array<(string)> | null);
    order?: (number | null);
};

export type DetailTaskSchema = {
    id: number;
    created_by: UserSchema;
    status: TaskStatus;
    medias: Array<MediaSchema>;
    tags?: Array<(string)>;
    order?: number;
    title: string;
    description: string;
    expected_date?: (string | null);
    deleted_at?: (string | null);
    created_at: string;
    updated_at: string;
};

export type MediaSchema = {
    id: number;
    created_by: UserSchema;
    name?: (string | null);
    file: string;
    content_type?: (string | null);
    size?: (number | null);
    uploaded_at: string;
    task?: (number | null);
};

export type NotificationSchema = {
    id: number;
    user: UserSchema;
    task: (TaskSchema | null);
    message: string;
    is_read: boolean;
    created_at: string;
};

export type TaskSchema = {
    id: number;
    created_by: UserSchema;
    status: TaskStatus;
    tags?: Array<(string)>;
    order?: number;
    title: string;
    description: string;
    expected_date?: (string | null);
    deleted_at?: (string | null);
    created_at: string;
    updated_at: string;
};

export type TaskStatus = 'PENDING' | 'IN_PROGRESS' | 'DONE';

export const TaskStatus = {
    PENDING: 'PENDING',
    IN_PROGRESS: 'IN_PROGRESS',
    DONE: 'DONE'
} as const;

export type UserSchema = {
    id: string;
    name?: (string | null);
    email: string;
    image?: (string | null);
};

export type GetTasksResponse = (Array<TaskSchema>);

export type CreateTaskData = {
    requestBody: CreateTaskSchema;
};

export type CreateTaskResponse = (TaskSchema);

export type GetArchivedTasksResponse = (Array<TaskSchema>);

export type GetTaskData = {
    taskId: number;
};

export type GetTaskResponse = (DetailTaskSchema);

export type UpdateTaskData = {
    requestBody: CreateTaskSchemaPatch;
    taskId: number;
};

export type UpdateTaskResponse = (TaskSchema);

export type DeleteTaskData = {
    taskId: number;
};

export type DeleteTaskResponse = (void);

export type ForceDeleteTaskData = {
    taskId: number;
};

export type ForceDeleteTaskResponse = (void);

export type RestoreTaskData = {
    taskId: number;
};

export type RestoreTaskResponse = (TaskSchema);

export type UploadFileData = {
    formData: {
        files: Array<((Blob | File))>;
    };
    taskId?: (number | null);
};

export type UploadFileResponse = (Array<MediaSchema>);

export type DeleteFileData = {
    fileId: number;
};

export type DeleteFileResponse = (void);

export type GetNotificationsResponse = (Array<NotificationSchema>);

export type GetUnreadCountResponse = (number);

export type MarkAllReadResponse = (unknown);